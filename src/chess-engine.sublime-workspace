{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"lin",
				"linregress"
			],
			[
				"num",
				"numericalAnalysis"
			],
			[
				"performed",
				"performedFolding"
			],
			[
				"variable",
				"variableManager"
			],
			[
				"Varia",
				"VariableManager"
			],
			[
				"Consta",
				"ConstantPoolGen"
			],
			[
				"fold",
				"foldBinaryArithmeticOperations"
			],
			[
				"load",
				"loadInstruction"
			],
			[
				"getValue",
				"getValueAtPosition"
			],
			[
				"local",
				"localVariableIndices"
			],
			[
				"stack",
				"stackMapTable"
			],
			[
				"toHave",
				"toHaveBeenCalled"
			],
			[
				"show",
				"showExportOptions"
			],
			[
				"errorD",
				"errorDescription"
			],
			[
				"err",
				"errorDialog"
			],
			[
				"to",
				"toHaveBeenCalled"
			],
			[
				"e",
				"except"
			],
			[
				"error",
				"errorDescription"
			],
			[
				"search",
				"searchColumnIndices"
			],
			[
				"data",
				"dataType"
			],
			[
				"toolbar",
				"toolbarTabInspectorHeight"
			],
			[
				"sort",
				"sortColumnIndex"
			],
			[
				"filterco",
				"filterColumnIndices"
			],
			[
				"frequen",
				"frequencyCutoff"
			],
			[
				"frequency",
				"frequencyShowUseWords"
			],
			[
				"selec",
				"selectedChartType"
			],
			[
				"columns",
				"columnsToColumnIndices"
			],
			[
				"redun",
				"redundantRemoveLimit"
			],
			[
				"remove",
				"redundantRemoveLimit"
			],
			[
				"redu",
				"redundantRemoveLimit"
			],
			[
				"deter",
				"deterministicSolutions"
			],
			[
				"midpoint",
				"midpointSolutionSet"
			],
			[
				"rayMid",
				"rayMidpointBase"
			],
			[
				"visible",
				"visibleGuardIndices"
			],
			[
				"curr",
				"currentlyVisibleGuards"
			],
			[
				"previous",
				"previousMidpointInside"
			],
			[
				"maxAdd",
				"maxAddedGuardIndex"
			],
			[
				"visibility",
				"visibilityPolygons"
			],
			[
				"non",
				"nonVisibleAreas"
			],
			[
				"visibi",
				"visibilityPolygons"
			],
			[
				"verte",
				"vertexCount"
			],
			[
				"inter",
				"intersectionPoints"
			],
			[
				"reach",
				"reachableVertices"
			],
			[
				"line",
				"lineFromVertexToBoundary"
			],
			[
				"pointImm",
				"pointImmediatelyAfter"
			],
			[
				"point",
				"pointImmediatelyBefore"
			],
			[
				"sca",
				"scaleFactor"
			],
			[
				"next",
				"nextVertex"
			],
			[
				"vertex",
				"vertexToAddColor"
			],
			[
				"should",
				"shouldShowChart"
			],
			[
				"sele",
				"selectedChartType"
			],
			[
				"shouldSho",
				"shouldShowPickerY"
			],
			[
				"sel",
				"selectedChartType"
			],
			[
				"highli",
				"highlightedPoints"
			],
			[
				"high",
				"highlightedPoints"
			],
			[
				"convex",
				"convexHullPoints"
			],
			[
				"conv",
				"convexHullPoints"
			],
			[
				"pending",
				"pendingRequestCallbacks"
			],
			[
				"sample",
				"sampleSize"
			],
			[
				"update",
				"updateInternalModel"
			],
			[
				"invalid",
				"invalidValuesFilterColumns"
			],
			[
				"getEle",
				"getElementById"
			],
			[
				"subsc",
				"subscribeToAnalysis"
			],
			[
				"all",
				"allowedXAxisColumns"
			],
			[
				"allo",
				"allowedYAxisColumns"
			],
			[
				"nubmer",
				"numberOfWords"
			],
			[
				"number",
				"numberOfWords"
			],
			[
				"sub",
				"subscriberID"
			],
			[
				"ini",
				"initialLoad"
			],
			[
				"allowed",
				"allowedXAxisColumns"
			],
			[
				"selection",
				"selectionState"
			],
			[
				"bac",
				"background-color"
			],
			[
				"par",
				"parallelComponent"
			],
			[
				"direction",
				"directionOfCurrent"
			],
			[
				"ending",
				"endingJunctionBranchBCurrent"
			],
			[
				"current",
				"currentEnteringDirection"
			],
			[
				"componentType",
				"componentTypeToImageName"
			],
			[
				"newComponenT",
				"newComponentType"
			],
			[
				"new",
				"newComponentImageLabel"
			],
			[
				"left",
				"left"
			],
			[
				"exress",
				"expressionNodeTypeString"
			],
			[
				"binary",
				"binaryFormulaType"
			],
			[
				"print",
				"printExpressionTree"
			],
			[
				"compelte",
				"completeChildren"
			],
			[
				"complete",
				"completeChildren"
			],
			[
				"expression",
				"expressionNodeTypeString"
			],
			[
				"res",
				"result"
			],
			[
				"cookie",
				"cookieParser"
			],
			[
				"getEdges",
				"getEdgesOriginatingFrom"
			],
			[
				"b",
				"b"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/bandi/Desktop/chess-engine/test/TestFENParser.cpp",
			"settings":
			{
				"buffer_size": 15942,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 47.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"remove package",
				"Package Control: Remove Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: install package",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"install jade",
			"h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib;"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/bandi/Desktop/chess-engine",
		"/Users/bandi/Desktop/chess-engine/test"
	],
	"file_history":
	[
		"/Users/bandi/Desktop/chess-engine/src/FENParser.cpp",
		"/Users/bandi/Desktop/chess-engine/test/TestPiece.cpp",
		"/Users/bandi/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/bandi/Library/Application Support/Sublime Text 3/Packages/C++YouCompleteMe/C++YouCompleteMe.sublime-settings",
		"/Users/bandi/Library/Application Support/Sublime Text 3/Packages/User/C++YouCompleteMe.sublime-settings",
		"/Users/bandi/Library/Application Support/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/Users/bandi/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/bandi/Desktop/chess-engine/Makefile",
		"/Users/bandi/.electrum/wallets/default_wallet",
		"/Users/bandi/Desktop/3d/app.js",
		"/Users/bandi/Desktop/3d/index.html",
		"/Users/bandi/Desktop/dsa.py",
		"/Users/bandi/Desktop/a.c",
		"/Users/bandi/Downloads/hydra.restore",
		"/Users/bandi/Downloads/passwords.txt",
		"/Users/bandi/Downloads/users.txt",
		"/Users/bandi/Desktop/OlympicServer.java",
		"/Users/bandi/Desktop/Basket.java",
		"/Users/bandi/Desktop/Student.java",
		"/Users/bandi/Desktop/CountingSemaphore.java",
		"/Users/bandi/Desktop/ComputerLabMonitor.java",
		"/Users/bandi/Desktop/PrimeServer.java",
		"/Users/bandi/Desktop/Tester.java",
		"/Users/bandi/Desktop/CountDownLatch.java",
		"/Users/bandi/Desktop/dcsDocs/conf.py",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/tasks.py",
		"/Users/bandi/Desktop/seldon-ucl/dcs/analyze.py",
		"/Users/bandi/Desktop/seldon-ucl/dcs/load.py",
		"/Users/bandi/Desktop/seldon-ucl/dcs/clean.py",
		"/Users/bandi/Desktop/seldon-ucl/dcs/view.py",
		"/Users/bandi/Desktop/dcsDocs/_templates/links.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/views.py",
		"/Users/bandi/Desktop/dcsDocs/index.rst",
		"/Users/bandi/Desktop/dcsDocs/socketAPI/index.rst",
		"/Users/bandi/Desktop/dcsDocs/angular/index.rst",
		"/Users/bandi/Desktop/dcsDocs/dcs/index.rst",
		"/Users/bandi/Desktop/dcsDocs/flask/index.rst",
		"/Users/bandi/Desktop/dcsDocs/celery/index.rst",
		"/Users/bandi/Desktop/dcsDocs/architecture.rst",
		"/Users/bandi/Desktop/dcsDocs/deployment.rst",
		"/Users/bandi/Documents/UCL/Year 1/Term 1/Principles of Programming/C/Exercise 1/cardpeek-0.8.1/dot_cardpeek_dir/scripts/etc/paris-rer.lua",
		"/Users/bandi/Desktop/dcsDocs/dcs/view.rst",
		"/Users/bandi/Desktop/dcsDocs/dcs/load.rst",
		"/Users/bandi/Desktop/dcsDocs/dcs/clean.rst",
		"/Users/bandi/Desktop/dcsDocs/dcs/analyze.rst",
		"/Users/bandi/Desktop/dcsDocs/make.bat",
		"/Users/bandi/Desktop/dcsDocs/Makefile",
		"/Users/bandi/Desktop/group6/src/comp207p/target/SimpleFolding.j",
		"/Users/bandi/Desktop/javaBCELConstantFolder/src/comp207p/target/ConstantVariableFolding.java",
		"/Users/bandi/Desktop/javaBCELConstantFolder/src/comp207p/main/ConstantFolder.java",
		"/Users/bandi/Desktop/javaBCELConstantFolder/test-reports/optimised/TEST-comp207p.target.ConstantVariableFoldingTest.txt",
		"/Users/bandi/Desktop/javaBCELConstantFolder/.asdf.swp",
		"/Users/bandi/Desktop/javaBCELConstantFolder/test/comp207p/target/ConstantVariableFoldingTest.java",
		"/Users/bandi/Desktop/javaBCELConstantFolder/build.xml",
		"/Users/bandi/Desktop/javaBCELConstantFolder/test-reports/optimised/TEST-comp207p.target.DynamicVariableFoldingTest.txt",
		"/Users/bandi/Desktop/javaBCELConstantFolder/test/comp207p/target/SimpleFoldingTest.java",
		"/Users/bandi/Desktop/dcsDocs/_build/html/_static/websupport.js",
		"/Users/bandi/Desktop/seldon-ucl/Vagrantfile",
		"/Users/bandi/Desktop/seldon/Vagrantfile",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.columnOperations.html",
		"/Users/bandi/Desktop/javaBCELConstantFolder/src/comp207p/target/DynamicVariableFolding.java",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.editColumn.html",
		"/Users/bandi/Desktop/dcsDocs/asdf.rst",
		"/Users/bandi/Desktop/dcsDocs/versions.rst",
		"/Users/bandi/Desktop/dcsDocs/version.rst",
		"/Users/bandi/Desktop/dcsDocs/general/architecture.rst",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/test/directives/columnPicker.spec.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/test/controllers/MainController.spec.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/columnPicker.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/karma.conf.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/controllers/main.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/libraries/bower.json",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/package.json",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/filters.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/test/UploadControllerSpec.js",
		"/Users/bandi/Downloads/d3/index.html",
		"/Users/bandi/Downloads/d3/test.js",
		"/Users/bandi/Desktop/asdf/Vagrantfile",
		"/Users/bandi/Desktop/debug.rtf",
		"/Users/bandi/Desktop/seldon-ucl/vagrant_provisioning/bootstrap.sh",
		"/Users/bandi/Desktop/seldon-ucl/vagrant_provisioning/startup.sh",
		"/Users/bandi/Desktop/asdf/vagrant_provisioning/startup.sh",
		"/Users/bandi/Desktop/test/Vagrantfile",
		"/Users/bandi/Desktop/seldon-ucl/vagrant_provisioning/supervisor/gunicorn.conf",
		"/Users/bandi/Desktop/seldon-ucl/vagrant_provisioning/supervisor/celery.sh",
		"/Users/bandi/Desktop/seldon-ucl/vagrant_provisioning/supervisor/gunicorn.sh",
		"/Users/bandi/Google Drive/COMP204P Team 19/Test Data/hr2000.csv",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.discretization.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.sort.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.search.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.sort.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.missingValues.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.findReplace.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/services/dialogs.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/controllers/visualize.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.featureEncoding.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.featureScaling.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/partials/main.visualize.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/services/session.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.editCell.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.inspect.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.discretization.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.editColumn.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.dangerZone.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.columnOperations.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/controllers/clean.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/__init__.py",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/partials/export.dialog.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.editRow.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.inspect.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/services/analysis.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/index.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.inspectorBar.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/services/socketConnection.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/partials/main.clean.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/partials/error.dialog.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.dangerZone.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/export.dialog.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/loading.dialog.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/error.dialog.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/server.py",
		"/Users/bandi/Desktop/seldon-ucl/server.py",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/services/init.js",
		"/Users/bandi/Downloads/project/src/Lexer.lex",
		"/Users/bandi/Desktop/server.py",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.filter.js",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.filter.html",
		"/Users/bandi/Desktop/seldon-ucl/flaskApp/static/directives/clean.sidebar.findReplace.html"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/bandi/Desktop/seldon-ucl/flaskApp/static",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"logo",
			"tungsten-full",
			"toJSON",
			"def data",
			"data",
			"row",
			"getData",
			"subscribeToMetadata",
			".init =",
			".init",
			"init",
			"metadata",
			"this.metadata",
			"metadata",
			"updateSessionID",
			"initialize",
			"csvto",
			"userUploaded",
			"newcell",
			"emptyStringToNaN",
			"emptystring",
			"emptyStringToNaN",
			"insertduplicate",
			"insert",
			"execute",
			"combineColumns",
			"splitcolumn",
			"findReplace",
			"findreplace",
			"find repalce",
			"fill-down",
			"change-",
			"flask-celery-task-completed",
			"Object",
			"sessionID",
			"sort",
			"filterWithSearchQuery",
			"findReplace",
			"regular expressions",
			"fillDown",
			"Tungsten",
			"Willow",
			"debugLevel",
			"insert",
			"il.setPositions",
			"removeUnused",
			"remove",
			"target",
			"insert",
			"new goto",
			"updateVariableValues",
			"updateVariableValues'",
			"delete",
			"il.delete",
			"removeUnreachableCode",
			"method comparison",
			"debugleve",
			"debug level",
			"foldBinaryArithmeticOperations",
			"updateVariableVAlues",
			"getValueOfPushInstruction",
			"getValue",
			"foldNegation",
			"negation",
			"integerArrayListAddWrapper(addedConstantIndices, ",
			"operation.equals\\(\\\"(.+)\\\"\\)",
			"operation.equals\\(\\\"(.+)\\\"\\))",
			"debugLevel",
			"Method %s",
			"Method %d",
			"Method ",
			"level",
			"debug",
			"deubg",
			"boolean debug",
			"System.out",
			"performedOptimization",
			"getAllVariableIndices",
			"variablefinder",
			"VariableFinder",
			"ifInstruction",
			"if_icmpge",
			"jvm",
			"cgen",
			"javac",
			"52",
			"javac",
			"boolean is",
			"this.gen",
			"javac",
			"constantpush",
			"print",
			"system",
			"System.out",
			"print",
			"newDataType",
			"datetime",
			"== object",
			"= object",
			"object",
			"int",
			"datetime",
			"newDataType",
			"datetime",
			"resizeTable",
			"resizeAnalyzeContent",
			"analyze",
			"properties",
			"object",
			"combine",
			"sys.path",
			"extensions",
			"version",
			"name",
			"version",
			"github",
			"logo",
			"html_sidebars",
			"$digest",
			"$timeout",
			"fatalError",
			"$timeout",
			"partials",
			"console.log",
			"docName",
			"docname",
			"location",
			"$state"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"operation instanceof \\1",
			"callback(false, response[\"error\"], response[\"errorDescription\"]);",
			"hide-dialog=\"hideDialog()\" hide-toast=\"hideToast()\"",
			"self",
			"this",
			"OurPolygon",
			">   \"",
			"me",
			"self",
			"_this",
			"scope.showToast({message: ",
			"",
			"index",
			"event.index",
			"Direction.Top",
			"Direction.Bottom",
			"Direction.Right",
			"Direction.Left",
			"\"libraries/bower_components",
			"application",
			"itemModal",
			"size",
			"a",
			"b",
			"// Draw the flame if engine is on",
			"// Draw the flame if engines are on"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/bandi/Desktop/chess-engine/test/TestFENParser.cpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 15942,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppYCM.2":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "chess-engine.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"data/local.0"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 187.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
